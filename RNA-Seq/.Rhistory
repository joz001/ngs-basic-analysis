mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
rm(de_modified)
de_results <- dds[keep,] %>% DESeq() %>% results() %>% data.frame()
# convert ENSG to Symbol
de_modified = de_results %>%
filter(!is.na(padj)) %>%
mutate(ENSG = gsub("\\..*","", row.names(de_modified))) %>%
mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
no_padj = de_results %>% filter(is.na(padj))
View(no_padj)
no_padj_counts = gene_mat[colnames(gene_mat) %in% colnames(no_padj)]
colnames(no_padj)
no_padj_counts = gene_mat[rownames(gene_mat) %in% rownames(no_padj)]
no_padj_counts = gene_mat[rownames(gene_mat) %in% rownames(no_padj), ]
View(no_padj_counts)
rm(no_padj)
rm(no_padj_counts)
# convert ENSG to Symbol
de_modified = de_results %>%
filter(!is.na(padj)) %>%
mutate(ENSG = gsub("\\..*","", row.names(de_modified))) %>%
mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
de_results <- dds[keep,] %>% DESeq() %>% results() %>% data.frame() %>% filter(!is.na(padj))
# convert ENSG to Symbol
de_modified = de_results %>%
filter(!is.na(padj)) %>%
mutate(ENSG = gsub("\\..*","", row.names(de_modified))) %>%
mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
# convert ENSG to Symbol
de_modified = de_results %>%
filter(!is.na(padj)) %>%
mutate(ENSG = gsub("\\..*","", row.names(de_results))) %>%
mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
# convert ENSG to Symbol
de_modified = de_results %>%
filter(!is.na(padj)) %>%
mutate(ENSG = gsub("\\..*","", row.names(de_modified)))
# convert ENSG to Symbol
de_modified = de_results %>%
filter(!is.na(padj))
de_modified = de_modified %>%
mutate(ENSG = gsub("\\..*","", row.names(de_modified))) %>%
mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
rm(de_modified)
# convert ENSG to Symbol
de_modified = de_results %>%
filter(!is.na(padj))%>%
mutate(ENSG = gsub("\\..*","", row.names(de_modified)))
# convert ENSG to Symbol
de_modified = de_results %>%
mutate(ENSG = gsub("\\..*","", row.names(de_results))) %>%
filter(!is.na(padj))
de_modified = de_modified %>%
mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('NKAP Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=300) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=300) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=300) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('NKAP Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=-log10(min(de_modified$padj))) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=300) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=300) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('NKAP Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=-log10(min(de_modified$padj))) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=-log10(min(de_modified$padj))) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=-log10(min(de_modified$padj))) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
library('clusterProfiler')
library('ggplot2')
library('readxl')
library('xlsx')
library('org.Hs.eg.db')
# make GO of data from DESeq output
GO_summary <- function(de_modified, type){
signif_res = de_modified %>% filter(!is.na(padj) & padj < 0.05)
if (type == "up")
signif_res = signif_res %>% filter(log2FoldChange > 1)
else if (type == "down")
signif_res = signif_res %>% filter(log2FoldChange < -1)
else
signif_res = signif_res %>% filter(log2FoldChange > 1 | log2FoldChange < -1)
ego <- enrichGO(gene = signif_res$ENSG,
keyType = "ENSEMBL",
OrgDb = org.Hs.eg.db,
ont = "ALL",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
if (length(ego$ID) < 1)
return(NULL)
df = ego %>% dplyr::select(-"ID") %>% data.frame
return(df[order(df$p.adjust),])
}
up_go = GO_summary(de_modified, "up")
down_go = GO_summary(de_modified, "down")
all_go = GO_summary(de_modified, "")
View(up_go)
View(down_go)
View(all_go)
# visualize top 10 up and down pathways
merged = list(up_go[1:10,], down_go[1:10, ])
df = data.frame('Pathway' = c(merged[[1]]$Description, merged[[2]]$Description),
'negLogPAdj_Value' = -log10(c(merged[[1]]$p.adjust, merged[[2]]$p.adjust)),
'count' = c(merged[[1]]$Count, merged[[2]]$Count),
'direction_discrete' = factor(c(rep("Up-Regulated", nrow(merged[[1]])),
rep("Down-Regulated", nrow(merged[[2]]))),
levels = c("Up-Regulated", "Down-Regulated")))
top_pathways_bar = ggplot(data=df, aes(x=reorder(Pathway, negLogPAdj_Value),
y=negLogPAdj_Value,
fill = direction_discrete)) +
facet_grid(direction_discrete ~ ., scales = "free", space = "free_x") +
geom_bar(stat="identity", show.legend = FALSE) +
geom_text(aes(label = count, y = negLogPAdj_Value), size = 3, hjust = -0.5) +
ggtitle("GRAS1 Knockdown Top Pathways") +
coord_flip() +
labs(x = element_blank(), y = expression(Enrichment~(-log[10](P-Value)))) +
scale_y_continuous(expand = c(0,0),
limits = c(0,max(1.2 * df$negLogPAdj_Value))) +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"),
axis.title.x = element_text(size = 12))
top_pathways_bar
top_pathways_bar = ggplot(data=df, aes(x=reorder(Pathway, negLogPAdj_Value),
y=negLogPAdj_Value,
fill = direction_discrete)) +
facet_grid(direction_discrete ~ ., scales = "free", space = "free_x") +
geom_bar(stat="identity", show.legend = FALSE) +
geom_text(aes(label = count, y = negLogPAdj_Value), size = 3, hjust = -0.5) +
ggtitle("NKAP Knockdown Top Pathways") +
coord_flip() +
labs(x = element_blank(), y = expression(Enrichment~(-log[10](P-Value)))) +
scale_y_continuous(expand = c(0,0),
limits = c(0,max(1.2 * df$negLogPAdj_Value))) +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"),
axis.title.x = element_text(size = 12))
top_pathways_bar
# display volcano plot
volcano
View(de_modified)
View(gene_mat)
gene_mat['ENSG00000142871.18', ]
library("DESeq2")
library('dplyr')
library('tidyverse')
# change directory to one with featureCount output read matrix
gene_mat = read.csv('/data/nkap_rnaseq/gene_counts/nkap_try2_stranded_gene_counts', skip=1, sep='\t', row.names = 1) %>%
select(c(6:11))
# distinguish between treatment and control
# IMPORTANT: currently assuming files by alphabetical order are 3 treatment and
# 3 control, may not always be the case
colData = data.frame(condition=c(rep('treatment', 3), rep('control', 3)),
type=rep('paired-end', 6),
row.names=colnames(gene_mat))
colData = data.frame(condition=c('treatment', 'control', 'control', 'control', 'treatment', 'treatment'),
type=rep('paired-end', 6),
row.names=colnames(gene_mat))
View(colData)
# run DESeq2 on reads matrix and save
dds <- DESeqDataSetFromMatrix(countData = gene_mat,
colData = colData,
design = ~ condition)
keep <- rowSums(counts(dds)) >= 10
de_results <- dds[keep,] %>% DESeq() %>% results() %>% data.frame()
library('ggplot2')
library("org.Hs.eg.db")
library("AnnotationDbi")
# convert ENSG to Symbol
de_modified = de_results %>%
mutate(ENSG = gsub("\\..*","", row.names(de_results))) %>%
filter(!is.na(padj))
de_modified = de_modified %>%
mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('NKAP Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=-log10(min(de_modified$padj))) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=-log10(min(de_modified$padj))) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=-log10(min(de_modified$padj))) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
library('clusterProfiler')
library('ggplot2')
library('readxl')
library('xlsx')
library('org.Hs.eg.db')
# make GO of data from DESeq output
GO_summary <- function(de_modified, type){
signif_res = de_modified %>% filter(!is.na(padj) & padj < 0.05)
if (type == "up")
signif_res = signif_res %>% filter(log2FoldChange > 1)
else if (type == "down")
signif_res = signif_res %>% filter(log2FoldChange < -1)
else
signif_res = signif_res %>% filter(log2FoldChange > 1 | log2FoldChange < -1)
ego <- enrichGO(gene = signif_res$ENSG,
keyType = "ENSEMBL",
OrgDb = org.Hs.eg.db,
ont = "ALL",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
if (length(ego$ID) < 1)
return(NULL)
df = ego %>% dplyr::select(-"ID") %>% data.frame
return(df[order(df$p.adjust),])
}
up_go = GO_summary(de_modified, "up")
down_go = GO_summary(de_modified, "down")
all_go = GO_summary(de_modified, "")
# visualize top 10 up and down pathways
merged = list(up_go[1:10,], down_go[1:10, ])
df = data.frame('Pathway' = c(merged[[1]]$Description, merged[[2]]$Description),
'negLogPAdj_Value' = -log10(c(merged[[1]]$p.adjust, merged[[2]]$p.adjust)),
'count' = c(merged[[1]]$Count, merged[[2]]$Count),
'direction_discrete' = factor(c(rep("Up-Regulated", nrow(merged[[1]])),
rep("Down-Regulated", nrow(merged[[2]]))),
levels = c("Up-Regulated", "Down-Regulated")))
top_pathways_bar = ggplot(data=df, aes(x=reorder(Pathway, negLogPAdj_Value),
y=negLogPAdj_Value,
fill = direction_discrete)) +
facet_grid(direction_discrete ~ ., scales = "free", space = "free_x") +
geom_bar(stat="identity", show.legend = FALSE) +
geom_text(aes(label = count, y = negLogPAdj_Value), size = 3, hjust = -0.5) +
ggtitle("NKAP Knockdown Top Pathways") +
coord_flip() +
labs(x = element_blank(), y = expression(Enrichment~(-log[10](P-Value)))) +
scale_y_continuous(expand = c(0,0),
limits = c(0,max(1.2 * df$negLogPAdj_Value))) +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"),
axis.title.x = element_text(size = 12))
top_pathways_bar
View(down_go)
library("DESeq2")
library('dplyr')
library('tidyverse')
# change directory to one with featureCount output read matrix
gene_mat = read.csv('/data/gras1_rnaseq/FeatureCountOutput/gras1_kd_gene_counts', skip=1, sep='\t', row.names = =1) %>%
# change directory to one with featureCount output read matrix
gene_mat = read.csv('/data/gras1_rnaseq/FeatureCountOutput/gras1_kd_gene_counts', skip=1, sep='\t', row.names=1) %>%
select(c(6:11))
# distinguish between treatment and control
# IMPORTANT: currently assuming files by alphabetical order are 3 treatment and
# 3 control, may not always be the case
colData = data.frame(condition=c(rep('treatment', 3), rep('control', 3)),
type=rep('paired-end', 6),
row.names=colnames(gene_mat))
# run DESeq2 on reads matrix and save
dds <- DESeqDataSetFromMatrix(countData = gene_mat,
colData = colData,
design = ~ condition)
keep <- rowSums(counts(dds)) >= 10
de_results <- dds[keep,] %>% DESeq() %>% results() %>% data.frame()
# convert ENSG to Symbol
de_modified = de_results %>%
mutate(ENSG = gsub("\\..*","", row.names(de_results))) %>%
filter(!is.na(padj))
de_modified = de_modified %>%
mutate(Symbol = mapIds(org.Hs.eg.db, keys=de_modified$ENSG, column="SYMBOL", keytype="ENSEMBL", multiVals="first")) %>%
mutate(Color = case_when(
padj >= 0.01 ~ 'ns',
log2FoldChange > 1 ~ 'inc',
log2FoldChange < -1 ~ 'dec',
.default = 'nfc'))
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('NKAP Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=-log10(min(de_modified$padj))) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=-log10(min(de_modified$padj))) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=-log10(min(de_modified$padj))) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('GRAS1 Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=-log10(min(de_modified$padj))*.9) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=-log10(min(de_modified$padj))*.9) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=-log10(min(de_modified$padj))*.9) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
min(de_modified$padj)
-log10(min(de_modified$padj))
de_modified$padj
de_modified$padj != 0
de_modified$padj[de_modified$padj != 0]
min(de_modified$padj[de_modified$padj != 0])
-log10(min(de_modified$padj[de_modified$padj != 0]))
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('GRAS1 Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=-log10(min(de_modified$padj[de_modified$padj != 0]))*.9) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=--log10(min(de_modified$padj[de_modified$padj != 0]))*.9) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=-log10(min(de_modified$padj[de_modified$padj != 0]))*.9) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('GRAS1 Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=-log10(min(de_modified$padj[de_modified$padj != 0]))) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=--log10(min(de_modified$padj[de_modified$padj != 0]))*.9) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=-log10(min(de_modified$padj[de_modified$padj != 0]))*.9) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
# plot genes in volcano plot
volcano <- ggplot(data=de_modified, mapping=aes(x=log2FoldChange, y=-log10(padj), color=Color, )) +
geom_point(alpha=0.2, size=1, ) +
ggtitle('GRAS1 Knockdown Genes Differential Expression') +
geom_text(label=paste('Increasing:', sum(de_modified$Color == 'inc')), x=3, y=-log10(min(de_modified$padj[de_modified$padj != 0]))) +
geom_text(label=paste('Decreasing:', sum(de_modified$Color == 'dec')), x=-3, y=-log10(min(de_modified$padj[de_modified$padj != 0]))) +
geom_text(label=paste('NS/NFC:', sum(de_modified$Color == 'nfc' | de_modified$Color == 'ns')), x=0, y=-log10(min(de_modified$padj[de_modified$padj != 0]))) +
geom_vline(xintercept=c(1, -1)) +
geom_hline(yintercept=2) +
scale_color_manual(values=c('blue', 'red', 'black', 'black')) +
theme_minimal() +
theme(legend.position = 'none')
# display volcano plot
volcano
library('clusterProfiler')
library('ggplot2')
library('readxl')
library('xlsx')
library('org.Hs.eg.db')
# make GO of data from DESeq output
GO_summary <- function(de_modified, type){
signif_res = de_modified %>% filter(!is.na(padj) & padj < 0.05)
if (type == "up")
signif_res = signif_res %>% filter(log2FoldChange > 1)
else if (type == "down")
signif_res = signif_res %>% filter(log2FoldChange < -1)
else
signif_res = signif_res %>% filter(log2FoldChange > 1 | log2FoldChange < -1)
ego <- enrichGO(gene = signif_res$ENSG,
keyType = "ENSEMBL",
OrgDb = org.Hs.eg.db,
ont = "ALL",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
if (length(ego$ID) < 1)
return(NULL)
df = ego %>% dplyr::select(-"ID") %>% data.frame
return(df[order(df$p.adjust),])
}
up_go = GO_summary(de_modified, "up")
down_go = GO_summary(de_modified, "down")
all_go = GO_summary(de_modified, "")
# visualize top 10 up and down pathways
merged = list(up_go[1:10,], down_go[1:10, ])
df = data.frame('Pathway' = c(merged[[1]]$Description, merged[[2]]$Description),
'negLogPAdj_Value' = -log10(c(merged[[1]]$p.adjust, merged[[2]]$p.adjust)),
'count' = c(merged[[1]]$Count, merged[[2]]$Count),
'direction_discrete' = factor(c(rep("Up-Regulated", nrow(merged[[1]])),
rep("Down-Regulated", nrow(merged[[2]]))),
levels = c("Up-Regulated", "Down-Regulated")))
top_pathways_bar = ggplot(data=df, aes(x=reorder(Pathway, negLogPAdj_Value),
y=negLogPAdj_Value,
fill = direction_discrete)) +
facet_grid(direction_discrete ~ ., scales = "free", space = "free_x") +
geom_bar(stat="identity", show.legend = FALSE) +
geom_text(aes(label = count, y = negLogPAdj_Value), size = 3, hjust = -0.5) +
ggtitle("NKAP Knockdown Top Pathways") +
coord_flip() +
labs(x = element_blank(), y = expression(Enrichment~(-log[10](P-Value)))) +
scale_y_continuous(expand = c(0,0),
limits = c(0,max(1.2 * df$negLogPAdj_Value))) +
scale_fill_manual(values = c("red", "blue")) +
theme_minimal() +
theme(panel.grid = element_blank(),
plot.title = element_text(face = "bold"),
axis.text.y = element_text(size = 10, face = "bold"),
axis.title.x = element_text(size = 12))
top_pathways_bar
View(down_go)
View(up_go)
View(up_go)
de_modified %>% filter(!is.na(padj) & padj < 0.05)
de_modified %>% filter(padj < 0.05)
de_modified %>% filter(!is.na(padj) & padj < 0.05)
down_go %>% dplyr::select(-"ID")
View(down_go)
# make GO of data from DESeq output
GO_summary <- function(de_modified, type){
signif_res = de_modified %>% filter(padj < 0.05)
if (type == "up")
signif_res = signif_res %>% filter(log2FoldChange > 1)
else if (type == "down")
signif_res = signif_res %>% filter(log2FoldChange < -1)
else
signif_res = signif_res %>% filter(log2FoldChange > 1 | log2FoldChange < -1)
ego <- enrichGO(gene = signif_res$ENSG,
keyType = "ENSEMBL",
OrgDb = org.Hs.eg.db,
ont = "ALL",
pAdjustMethod = "BH",
qvalueCutoff = 0.05,
readable = TRUE)
if (length(ego$ID) < 1)
return(NULL)
df = ego %>% data.frame
return(df[order(df$p.adjust),])
}
up_go = GO_summary(de_modified, "up")
View(up_go)
